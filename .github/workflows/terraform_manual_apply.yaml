---
name: "Manually apply Terraform Stack on AWS"
run-name: ${{ github.actor }} is testing out an Nginx deployment on AWS
on:
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  WORKING_DIRECTORY: terraform
  ELB_TARGET_RESOURCE: aws_lb_target_group.alb_target_group
  S3_BUCKET_RESOURCE: aws_s3_bucket.lb_logs
  S3_BUCKET_NAME: nginx-logging-zx
  S3_BUCKET_KEY_NAME: infra.tfstate

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 1200
          retry-max-attempts: 5
          
      - name: Terraform setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.3"

      - name: terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: terraform init
        id: init
        run: terraform init
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: terraform validate
        id: validate
        run: terraform validate
        
      - name: terraform import S3
        run: terraform import ${{ env.S3_BUCKET_RESOURCE }} ${{ env.S3_BUCKET_NAME }}
        working-directory: ${{ env.WORKING_DIRECTORY }}
        continue-on-error: true
        
      - name: terraform import ELB
        run: terraform import ${{ env.ELB_TARGET_RESOURCE }} ${{ secrets.ELB_TARGET_GROUP_ARN }}
        working-directory: ${{ env.WORKING_DIRECTORY }}
        continue-on-error: true

      - name: terraform apply
        id: apply
        env:
          TF_LOG: ERROR
        run: terraform apply -auto-approve -input=false
        working-directory: ${{ env.WORKING_DIRECTORY }}
        continue-on-error: true

      - name: Display Terraform output
        run: terraform output
        working-directory: ${{ env.WORKING_DIRECTORY }}